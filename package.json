{
  "name": "mcp-research-file-server",
  "version": "1.0.0",
  "description": "Multimodal MCP File Server for Research Proposal Development",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev:web",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:mcp-only": "cd backend && npm run start:mcp-only",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "cd backend && npm start",
    "start:mcp-only": "cd backend && npm run start:mcp-only",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "clean": "rm -rf backend/dist frontend/dist backend/node_modules frontend/node_modules node_modules",
    "test": "cd backend && npm test",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "format": "npm run format:backend && npm run format:frontend",
    "format:backend": "cd backend && npm run format",
    "format:frontend": "cd frontend && npm run format",
    "qdrant:start": "cd docker && docker-compose up -d qdrant",
    "qdrant:stop": "cd docker && docker-compose down",
    "qdrant:reset": "cd docker && docker-compose down && docker volume rm docker_qdrant_storage docker_qdrant_snapshots && docker-compose up -d qdrant",
    "qdrant:setup": "cd scripts && python setup-qdrant-collections.py",
    "services:start": "concurrently \"npm run qdrant:start\" \"npm run mclip:start\" \"npm run docling:start\"",
    "services:stop": "npm run qdrant:stop && npm run mclip:stop && npm run docling:stop",
    "mclip:start": "cd services && python mclip-service.py",
    "mclip:stop": "taskkill /f /im python.exe /fi \"commandline cont mclip-service.py\" 2>nul || echo M-CLIP service not running",
    "docling:start": "cd services && python docling-service.py",
    "docling:stop": "taskkill /f /im python.exe /fi \"commandline cont docling-service.py\" 2>nul || echo Docling service not running",
    "ragas:start": "cd tests/rag-evaluation && python python/evaluation_service.py",
    "test:embeddings": "cd src/embeddings && npx tsx embedding-test.ts",
    "test:integration": "npm run test:embeddings && cd tests && npm test",
    "logs": "cd backend && npm run logs",
    "health": "curl http://localhost:6333/health && curl http://localhost:8002/health && curl http://localhost:8003/health",
    "download:models": "cd services && pip install -r requirements-mclip.txt -r requirements-docling.txt"
  },
  "workspaces": [
    "backend",
    "frontend"
  ],
  "keywords": [
    "mcp",
    "model-context-protocol",
    "research",
    "multimodal",
    "ai-assistant",
    "file-server"
  ],
  "author": "MCP Research Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}